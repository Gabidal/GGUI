name: CI

on:
  push:
    branches: [ Dev, main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }} / ${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [gcc]

    env:
      CXX: g++

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v4

      # Cache pip dependencies (for Meson)
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 python3-pip ninja-build g++ meson valgrind

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install -y ninja git mingw-w64
          python -m pip install --upgrade meson

      # Configure project
      - name: Configure (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: CI=1 ./bin/init.sh

      - name: Configure (Windows)
        if: matrix.os == 'windows-latest'
        run: .\bin\init.bat

      # Build
      - name: Build (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: ./bin/build.sh

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: .\bin\build.bat

      # Run tests
      - name: Test (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: ./bin/test.sh

      - name: Test (Windows)
        if: matrix.os == 'windows-latest'
        run: .\bin\test.bat

      # Upload test logs on failure
      - name: Upload logs if tests fail
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.os }}
          path: ./test/logs/
